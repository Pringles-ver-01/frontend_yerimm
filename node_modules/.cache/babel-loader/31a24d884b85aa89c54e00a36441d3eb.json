{"ast":null,"code":"var _jsxFileName = \"/Users/boogiewoogie/WebstormProjects/frontend_yerimm/src/portfolio/BudgetHistory.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst BudgetHistory = () => {\n  const [list, setList] = useState([]);\n  let transactionDetail = [];\n  useEffect(() => {\n    transactionDetail = [];\n    axios.get(`http://localhost:8080/`).then(({\n      response\n    }) => {\n      console.log(`BudgetHistory useEffect then`);\n      response.list.map(elem => {\n        //java에서 어떤 형식으로 response를 넘길지..\n        transactionDetail.push(elem);\n      });\n    }).catch(error => {\n      console.log(`BudgetHistory useEffect err`);\n      throw error;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"\\uAC70\\uB798\\uB0A0\\uC9DC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"\\uC885\\uBAA9\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"\\uAC70\\uB798 \\uC885\\uB958\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"\\uAE08\\uC561\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uC794\\uC561\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, transactionDetail.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, item.transactionDate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, item.stockName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, item.transactionType), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, item.profitLoss), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, item.totalAsset))))));\n};\n\nexport default BudgetHistory;","map":{"version":3,"sources":["/Users/boogiewoogie/WebstormProjects/frontend_yerimm/src/portfolio/BudgetHistory.js"],"names":["React","useEffect","useState","axios","BudgetHistory","list","setList","transactionDetail","get","then","response","console","log","map","elem","push","catch","error","item","transactionDate","stockName","transactionType","profitLoss","totalAsset"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAIK,iBAAiB,GAAE,EAAvB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AAChBM,IAAAA,iBAAiB,GAAG,EAApB;AACAJ,IAAAA,KAAK,CAACK,GAAN,CAAW,wBAAX,EACKC,IADL,CACU,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAgB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAa,8BAAb;AACAF,MAAAA,QAAQ,CAACL,IAAT,CAAcQ,GAAd,CAAkBC,IAAI,IAAE;AAAE;AACtBP,QAAAA,iBAAiB,CAACQ,IAAlB,CAAuBD,IAAvB;AACH,OAFD;AAGH,KANL,EAOKE,KAPL,CAOWC,KAAK,IAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAa,6BAAb;AACA,YAAMK,KAAN;AACH,KAVL;AAWC,GAbQ,EAaN,EAbM,CAAT;AAgBA,sBAAO,uDACH;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CADA,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCV,iBAAiB,CAACM,GAAlB,CAAuBK,IAAD,iBACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,eAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,SAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,eAAV,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACI,UAAV,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,CAACK,UAAV,CALJ,CADH,CADD,CAVJ,CADG,CAAP;AAwBH,CA5CD;;AA8CA,eAAenB,aAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst BudgetHistory = () => {\n    const [list, setList]=useState([]);\n    let transactionDetail =[]\n\n    useEffect(() => {\n    transactionDetail = []\n    axios.get(`http://localhost:8080/`)\n        .then(({response}) => {\n            console.log(`BudgetHistory useEffect then`)\n            response.list.map(elem=>{ //java에서 어떤 형식으로 response를 넘길지..\n                transactionDetail.push(elem)\n            })\n        })\n        .catch(error => {\n            console.log(`BudgetHistory useEffect err`)\n            throw error\n        })\n    }, [])\n\n\n    return <>\n        <table className=\"table\">\n            <thead>\n            <tr>\n                <th>거래날짜</th>\n                <th>종목</th>\n                <th>거래 종류</th>\n                <th>금액</th>\n                <th>잔액</th>\n            </tr>\n            </thead>\n            <tbody>\n            {transactionDetail.map((item)=>(\n                <tr>\n                    <td>{item.transactionDate}</td>\n                    <td>{item.stockName}</td>\n                    <td>{item.transactionType}</td>\n                    <td>{item.profitLoss}</td>\n                    <td>{item.totalAsset}</td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    </>\n}\n\nexport default BudgetHistory;"]},"metadata":{},"sourceType":"module"}